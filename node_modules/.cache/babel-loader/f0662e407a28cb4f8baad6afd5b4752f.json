{"ast":null,"code":"var _jsxFileName = \"/Users/noerios/Documents/Bootcamp Repository/Local Folder/19-React/class_demo/src/components/Math.js\";\nimport React from \"react\"; // Create a new component named \"Math\"\n// Render one Math component in the place of each \"?\" mark\n// Math should accept 3 props\n// num1, operator, and num2\n// Math should return a span tag displaying the result e.g.  19 + 341 = 360\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Math(props) {\n  let result;\n\n  switch (props.operator) {\n    case \"+\":\n      result = props.num1 + props.num2;\n      break;\n\n    case \"-\":\n      result = props.num1 - props.num2;\n      break;\n\n    default:\n      result = NaN;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [`${props.num1} ${props.operator} ${props.num2}`, \" = \", result]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Math;\nexport default Math;\n\nvar _c;\n\n$RefreshReg$(_c, \"Math\");","map":{"version":3,"sources":["/Users/noerios/Documents/Bootcamp Repository/Local Folder/19-React/class_demo/src/components/Math.js"],"names":["React","Math","props","result","operator","num1","num2","NaN"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEjB,MAAIC,MAAJ;;AACF,UAAOD,KAAK,CAACE,QAAb;AACE,SAAK,GAAL;AACED,MAAAA,MAAM,GAAGD,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACI,IAA5B;AACA;;AACF,SAAK,GAAL;AACEH,MAAAA,MAAM,GAAGD,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACI,IAA5B;AACA;;AACF;AACEH,MAAAA,MAAM,GAAGI,GAAT;AARJ;;AAUA,sBACE;AAAA,eACI,GAAEL,KAAK,CAACG,IAAK,IAAGH,KAAK,CAACE,QAAS,IAAGF,KAAK,CAACI,IAAK,EADjD,SACuDH,MADvD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAlBQF,I;AAoBT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\n// Create a new component named \"Math\"\n\n// Render one Math component in the place of each \"?\" mark\n// Math should accept 3 props\n// num1, operator, and num2\n// Math should return a span tag displaying the result e.g.  19 + 341 = 360\nfunction Math(props) {\n\n    let result;\n  switch(props.operator) {\n    case \"+\":\n      result = props.num1 + props.num2;\n      break;\n    case \"-\":\n      result = props.num1 - props.num2;\n      break;\n    default:\n      result = NaN;\n  }\n  return (\n    <div>\n      {`${props.num1} ${props.operator} ${props.num2}`} = {result}\n    </div>\n  );\n}\n\nexport default Math;\n"]},"metadata":{},"sourceType":"module"}