{"ast":null,"code":"var _jsxFileName = \"/Users/noerios/Documents/Bootcamp Repository/Local Folder/19-React/class_demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DeveloperInfo from \"./components/Developer\";\nimport MoodBtns from \"./components/MoodBtns\";\nimport Nav from \"./components/Nav\";\nimport * as API from \"./utils/API\";\nimport DeveloperContext from \"./utils/DeveloperContext\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [developerState, setDeveloperState] = useState({\n    name: \"\",\n    mood: \"\",\n    lifeLongLearner: true,\n    excitementLevel: 0\n  });\n\n  function changeMood(mood) {\n    if (mood === \"determined\") {\n      developerState.excitementLevel += 10000;\n    } else {\n      developerState.excitementLevel -= 10000;\n    }\n\n    setDeveloperState({ ...developerState,\n      mood\n    });\n  }\n\n  useEffect(() => {\n    // For demonstration purposes, we mock an API call.\n    API.getDeveloper.then(res => {\n      setDeveloperState(res);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(DeveloperContext.Provider, {\n      value: developerState,\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeveloperInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MoodBtns, {\n        changeMood: changeMood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rrjsWwekfhtFOMMr+KEQx2saQK8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noerios/Documents/Bootcamp Repository/Local Folder/19-React/class_demo/src/App.js"],"names":["React","useState","useEffect","DeveloperInfo","MoodBtns","Nav","API","DeveloperContext","App","developerState","setDeveloperState","name","mood","lifeLongLearner","excitementLevel","changeMood","getDeveloper","then","res"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC;AACnDU,IAAAA,IAAI,EAAE,EAD6C;AAEnDC,IAAAA,IAAI,EAAE,EAF6C;AAGnDC,IAAAA,eAAe,EAAE,IAHkC;AAInDC,IAAAA,eAAe,EAAE;AAJkC,GAAD,CAApD;;AAOA,WAASC,UAAT,CAAoBH,IAApB,EAA0B;AACxB,QAAGA,IAAI,KAAK,YAAZ,EAA0B;AACxBH,MAAAA,cAAc,CAACK,eAAf,IAAkC,KAAlC;AACD,KAFD,MAGK;AACHL,MAAAA,cAAc,CAACK,eAAf,IAAkC,KAAlC;AACD;;AACDJ,IAAAA,iBAAiB,CAAC,EAChB,GAAGD,cADa;AAEhBG,MAAAA;AAFgB,KAAD,CAAjB;AAID;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACd;AACAI,IAAAA,GAAG,CAACU,YAAJ,CAAiBC,IAAjB,CAAuBC,GAAD,IAAS;AAC7BR,MAAAA,iBAAiB,CAACQ,GAAD,CAAjB;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,MAAA,KAAK,EAAET,cAAlC;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,UAAU,EAAEM;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GArCQP,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeveloperInfo from \"./components/Developer\";\nimport MoodBtns from \"./components/MoodBtns\";\nimport Nav from \"./components/Nav\";\nimport * as API from \"./utils/API\";\nimport DeveloperContext from \"./utils/DeveloperContext\";\nimport \"./App.css\";\n\nfunction App() {\n  const [developerState, setDeveloperState] = useState({\n    name: \"\",\n    mood: \"\",\n    lifeLongLearner: true,\n    excitementLevel: 0\n  });\n\n  function changeMood(mood) {\n    if(mood === \"determined\") {\n      developerState.excitementLevel += 10000;\n    }\n    else {\n      developerState.excitementLevel -= 10000;\n    }\n    setDeveloperState({\n      ...developerState,\n      mood\n    });\n  }\n\n  useEffect(() => {\n    // For demonstration purposes, we mock an API call.\n    API.getDeveloper.then((res) => {\n      setDeveloperState(res);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <DeveloperContext.Provider value={developerState}>\n        <Nav />\n        <DeveloperInfo />\n        <MoodBtns changeMood={changeMood} />\n      </DeveloperContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}